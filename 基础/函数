## 1、自定义函数

def add(a,b):             #add函数接受两个参数a和b，并将其相加返回结果
    return a+b

# 可在程序中多次调用add函数
result1 = add(1,2)
result2 = add(5,8)
print(result1)
print(result2)



## 2、常用内置函数

# abs()：返回一个数的绝对值。
a = abs(-18)
print(a)

# all()：用于检查一个可迭代对象中是否包含所有元素
all1 = all([1,2,3,4,5,0])     #其中元素为0、空集时输出false
all2 = all([1,2,3,4,5,])
print("all1=",all1)
print("all2",all2)

#any()：检查一个可迭代对象中是否包含特定元素
any1 = any([1,2,3,4,5,6])
any2 = any([1,2,3,4,5,0])
any3 = any([0,0,0,0,0])    #只有当列表中全为假时才输出false
print("any1=",any1)
print("any2=",any2)
print("any3=",any3)

#bin()：将整数转换为前缀为“0b”的二进制字符串
print(bin(14))

#如果需要或不需要前缀“0b ”, 可以使用以下两种方法之一
print(format(14,'#b'),format(14,'b'))
print(f'{14:#b}',f'{14:b}')

# bool()：返回真和假
# breakpoint()：程序员可以通过在这个关键点上设置断点，来观察程序的执行过程，并进行调试
# bytearray()：返回新的字节数组

# callable(): 用于检查一个对象是否是可调用的
a=10
print(callable(a))    #False 变量a不能被调用

def f():
    print("hello")
    print(callable(f))       #True函数是可以被调用的
f()

# chr()：将整数换为字符，只能用于ASCII码值在0到127之间的整数

# compile()：将可执行文件或库文件编译成字节码文件
code1 = "for i in range(3): print(i)"
com = compile(code1,"",mode="exec")
exec(com)

# dict()：字典

#创建一个字典
my_dict = {'phone':1,'computer':2,'cup':3}
print(my_dict)

# list()：列表
my_list = [1,2,3,4,5]
my_list_view = list(my_list)
print(my_list_view)

# len()：获取一个字符串或序列的长度
string = "hello world"
length = len(string)
print(length)

#getattr()：获取类的属性
class Person:
    def __init__(self,name):
        self.name = name
p = Person("BOOKER TAO")
print(getattr(p,"name"))

# open()：用于打开文件或目录

# 'r' 打开以供阅读（默认）
# 'w' 打开进行写入，首先截断文件
# 'x' 以独占方式打开，如果文件已经存在，则失败
# 'a' 打开进行写入，追加到文件的末尾（如果存在）
# 'b' 二进制
# 't' 文本模式（默认）
# '+' 打开以进行更新（读取和写入）


file = open('example.txt','r')
print(file.read())

# range()：生成一个整数序列
for i in range(0,100,2):  #2为步距
    print(i)

# reversed()：反转一个序列
my_list = [1,2,3,4,5]
print(list(reversed(my_list)))
